<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.curation.model.dao.CommentDao">
	<resultMap type="CommentDto" id="commentMap">
      <id column="comment_id" property="commentId"/>
      <result column="comment_url" property="commentUrl"/>
      <result column="comment_content" property="commentContent"/>
      <result column="id" property="id"/>
      <result column="comment_date" property="commentDate"/>
      <result column="count_like" property="countLike"/>
	</resultMap>
	
	<select id="selectCommentById" parameterType="int" resultMap="commentMap">
		SELECT *
		FROM comment
		WHERE comment_id = #{commentId}
	</select>
	
	<select id="selectCommentByFeedId" parameterType="java.lang.String" resultMap="commentMap">
		SELECT c.comment_id, c.feed_id, c.comment_content, c.id, c.comment_date, count(cl.like_id) as count_like
		FROM comment c LEFT OUTER JOIN comment_like cl
		ON c.comment_id = cl.comment_id
		WHERE feed_id = 2
		GROUP BY c.comment_id;
	</select>
	
	<insert id="createComment" parameterType="commentDto">
		INSERT INTO comment(feed_id, comment_content, id, comment_date)
		VALUES(#{feedId}, #{commentContent}, #{id}, now())
	</insert>
	
	<delete id="deleteComment" parameterType="int">
		DELETE FROM comment
		WHERE comment_id = #{commentId}
	</delete>
	
	<update id="updateComment" parameterType="commentDto">
		UPDATE comment
		SET
		comment_id = #{commentId},
		feed_id = #{feedId},
		comment_content = #{commentContent},
		id = #{id},
		comment_date= #{commentDate}
		WHERE comment_id = #{commentId}
	</update>
	
</mapper>

